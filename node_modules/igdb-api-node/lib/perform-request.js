"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requestPromise = _interopRequireDefault(require("./request-promise"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function _default(url, apiService) {
  var options = {
    headers: {
      Accept: 'application/json'
    },
    url: url
  };

  if (apiService.token) {
    options.headers.Authorization = "Bearer ".concat(apiService.token);
  }

  options.headers[apiService.keyHeader] = apiService.key;
  return (0, _requestPromise.default)(options).then(function (result) {
    return new Promise(function (resolve, reject) {
      if (result.response.statusCode !== 200) {
        reject(new Error("HTTP Status ".concat(result.response.statusCode, " - ").concat(options.url)));
        return;
      }

      try {
        resolve({
          body: JSON.parse(result.body),
          headers: result.response.headers,
          scrollCount: result.response.headers['x-count'] || result.response.headers['X-Count'],
          scrollUrl: result.response.headers['x-next-page'] || result.response.headers['X-Next-Page'],
          url: options.url
        });
      } catch (error) {
        reject(error);
      }
    });
  });
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2pzL3BlcmZvcm0tcmVxdWVzdC5qcyJdLCJuYW1lcyI6WyJ1cmwiLCJhcGlTZXJ2aWNlIiwib3B0aW9ucyIsImhlYWRlcnMiLCJBY2NlcHQiLCJ0b2tlbiIsIkF1dGhvcml6YXRpb24iLCJrZXlIZWFkZXIiLCJrZXkiLCJ0aGVuIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJyZXN1bHQiLCJyZXNwb25zZSIsInN0YXR1c0NvZGUiLCJFcnJvciIsImJvZHkiLCJKU09OIiwicGFyc2UiLCJzY3JvbGxDb3VudCIsInNjcm9sbFVybCIsImVycm9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7Ozs7ZUFVZSxrQkFBQ0EsR0FBRCxFQUFNQyxVQUFOLEVBQXFCO0FBQ2hDLE1BQU1DLFVBQVU7QUFDWkMsYUFBUztBQUNMQyxjQUFRO0FBREgsS0FERztBQUlaSjtBQUpZLEdBQWhCOztBQU9BLE1BQUlDLFdBQVdJLEtBQWYsRUFBc0I7QUFDbEJILFlBQVFDLE9BQVIsQ0FBZ0JHLGFBQWhCLG9CQUEwQ0wsV0FBV0ksS0FBckQ7QUFDSDs7QUFPREgsVUFBUUMsT0FBUixDQUFnQkYsV0FBV00sU0FBM0IsSUFBd0NOLFdBQVdPLEdBQW5EO0FBR0EsU0FBTyw2QkFBUU4sT0FBUixFQUFpQk8sSUFBakIsQ0FBc0I7QUFBQSxXQUFVLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVVDLE1BQVYsRUFBcUI7QUFDcEUsVUFBSUMsT0FBT0MsUUFBUCxDQUFnQkMsVUFBaEIsS0FBK0IsR0FBbkMsRUFBd0M7QUFDcENILGVBQU8sSUFBSUksS0FBSix1QkFBeUJILE9BQU9DLFFBQVAsQ0FBZ0JDLFVBQXpDLGdCQUF5RGIsUUFBUUYsR0FBakUsRUFBUDtBQUNBO0FBQ0g7O0FBRUQsVUFBSTtBQU1BVyxnQkFBUTtBQUNKTSxnQkFBTUMsS0FBS0MsS0FBTCxDQUFXTixPQUFPSSxJQUFsQixDQURGO0FBRUpkLG1CQUFTVSxPQUFPQyxRQUFQLENBQWdCWCxPQUZyQjtBQUdKaUIsdUJBQWFQLE9BQU9DLFFBQVAsQ0FBZ0JYLE9BQWhCLENBQXdCLFNBQXhCLEtBQXNDVSxPQUFPQyxRQUFQLENBQWdCWCxPQUFoQixDQUF3QixTQUF4QixDQUgvQztBQUlKa0IscUJBQVdSLE9BQU9DLFFBQVAsQ0FBZ0JYLE9BQWhCLENBQXdCLGFBQXhCLEtBQTBDVSxPQUFPQyxRQUFQLENBQWdCWCxPQUFoQixDQUF3QixhQUF4QixDQUpqRDtBQUtKSCxlQUFLRSxRQUFRRjtBQUxULFNBQVI7QUFPSCxPQWJELENBYUUsT0FBT3NCLEtBQVAsRUFBYztBQUVaVixlQUFPVSxLQUFQO0FBQ0g7QUFDSixLQXZCc0MsQ0FBVjtBQUFBLEdBQXRCLENBQVA7QUF3QkgsQyIsImZpbGUiOiJwZXJmb3JtLXJlcXVlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgbm8tcHJvY2Vzcy1lbnY6IDAgKi9cbmltcG9ydCByZXF1ZXN0IGZyb20gJy4vcmVxdWVzdC1wcm9taXNlJztcblxuLyoqXG4gKiBTZW5kcyBhIEhUVFAgcmVxdWVzdCB0byB0aGUgcHJvdmlkZWQgVVJMLlxuICogQGFyZyB7c3RyaW5nfSB1cmxcbiAqIEBhcmcge29iamVjdH0gW2FwaVNlcnZpY2VdIFRoZSBBUEkgc2VydmljZSBvYmplY3QgY29udGFpbmluZyBlbmRwb2ludCBkZXRhaWxzIGFuZCBrZXlcbiAqIEByZXR1cm5zIHtQcm9taXNlPE9iamVjdD59IFRoZSBwYXJzZWQgSFRUUCByZXNwb25zZVxuICogQGV4YW1wbGVcbiAqIHBlcmZvcm1SZXF1ZXN0KCdodHRwOi8vZXhhbXBsZS5jb20vYXBpL3YxL2V4YW1wbGVFbmRwb2ludCcsICdleGFtcGxlLWFwaS1rZXktMTIzJykudGhlbihjb25zb2xlLmxvZylcbiAqL1xuZXhwb3J0IGRlZmF1bHQgKHVybCwgYXBpU2VydmljZSkgPT4ge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgIH0sXG4gICAgICAgIHVybFxuICAgIH07XG5cbiAgICBpZiAoYXBpU2VydmljZS50b2tlbikge1xuICAgICAgICBvcHRpb25zLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IGBCZWFyZXIgJHthcGlTZXJ2aWNlLnRva2VufWA7XG4gICAgfVxuXG4gICAgLypcbiAgICBJZiBubyBBUEkga2V5IGlzIHByb3ZpZGVkIHRvIHRoZSBmdW5jdGlvbiwgbG9vayBmb3IgdGhlIGtleSBpbiB0aGVcbiAgICBwcm9jZXNzIG9yIGdsb2JhbCBzY29wZS4gVGhlIHByb3BlcnR5IHRvIGluc3BlY3QgaXMgc2V0IGluXG4gICAgY29uZmlndXJhdGlvbi5qcyBhcyBgZ2xvYmFsUHJvcGVydHlgLlxuICAgICovXG4gICAgb3B0aW9ucy5oZWFkZXJzW2FwaVNlcnZpY2Uua2V5SGVhZGVyXSA9IGFwaVNlcnZpY2Uua2V5O1xuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdCB0byB0aGUgQVBJXG4gICAgcmV0dXJuIHJlcXVlc3Qob3B0aW9ucykudGhlbihyZXN1bHQgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBpZiAocmVzdWx0LnJlc3BvbnNlLnN0YXR1c0NvZGUgIT09IDIwMCkge1xuICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgSFRUUCBTdGF0dXMgJHtyZXN1bHQucmVzcG9uc2Uuc3RhdHVzQ29kZX0gLSAke29wdGlvbnMudXJsfWApKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvKlxuICAgICAgICAgICAgQWx3YXlzIHdyYXAgYW55IGxvZ2ljIGNvbnRhaW5pbmcgSlNPTi5wYXJzZSgpIGluIGFcbiAgICAgICAgICAgIHRyeS1jYXRjaCBibG9jayBqdXN0IGluIGNhc2UgdGhlIHN0cmluZyBpcyBtYWxmb3JtZWRcbiAgICAgICAgICAgIGFuZCBpdCB0aHJvd3MgYW4gRXJyb3IuXG4gICAgICAgICAgICAqL1xuICAgICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5wYXJzZShyZXN1bHQuYm9keSksXG4gICAgICAgICAgICAgICAgaGVhZGVyczogcmVzdWx0LnJlc3BvbnNlLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgc2Nyb2xsQ291bnQ6IHJlc3VsdC5yZXNwb25zZS5oZWFkZXJzWyd4LWNvdW50J10gfHwgcmVzdWx0LnJlc3BvbnNlLmhlYWRlcnNbJ1gtQ291bnQnXSxcbiAgICAgICAgICAgICAgICBzY3JvbGxVcmw6IHJlc3VsdC5yZXNwb25zZS5oZWFkZXJzWyd4LW5leHQtcGFnZSddIHx8IHJlc3VsdC5yZXNwb25zZS5oZWFkZXJzWydYLU5leHQtUGFnZSddLFxuICAgICAgICAgICAgICAgIHVybDogb3B0aW9ucy51cmxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgLy8gSlNPTi5wYXJzZSgpIGVycm9yXG4gICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfSkpO1xufTtcbiJdfQ==